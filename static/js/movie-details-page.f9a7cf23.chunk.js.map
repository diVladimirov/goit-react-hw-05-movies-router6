{"version":3,"file":"static/js/movie-details-page.f9a7cf23.chunk.js","mappings":"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","sources":["components/Movies/Movies.styled.js","components/MovieDetails/MovieDetails.styled.js","components/MovieDetails/MovieDetails.js","pages/MovieDetailsPage.js","services/api.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const FormStyled = styled.form`\n  display: flex;\n  justify-content: center;\n  gap: 20px;\n`;\n\nexport const InputStyled = styled.input`\n  display: inline-block;\n  width: 200px;\n  font: inherit;\n  font-size: 18px;\n  line-height: 24px;\n  padding: 8px 16px;\n  ::placeholder {\n    font: inherit;\n    font-size: 16px;\n  }\n`;\n\nexport const ButtonStyled = styled.button`\n  padding: 8px 16px;\n  border-radius: 2px;\n  background-color: #10a446;\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  text-align: center;\n  display: inline-block;\n  color: #f2e310;\n  border: 0;\n  text-decoration: none;\n  cursor: pointer;\n  font-family: inherit;\n  font-size: 18px;\n  line-height: 24px;\n  font-style: normal;\n  font-weight: 500;\n  min-width: 180px;\n  box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2),\n    0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\n  :hover,\n  :focus {\n    background-color: #303f9f;\n  }\n`;\n","import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const SectionStyled = styled.section`\n  padding: 20px;\n`;\n\nexport const LinksWrapperStyled = styled.div`\n  display: flex;\n  gap: 50px;\n  justify-content: center;\n`;\n\nexport const NavLinkStyled = styled(NavLink)`\n  font-weight: 700;\n  font-size: 24px;\n  line-height: 28px;\n  transition: color 250ms linear;\n  color: #f2e310;\n  &.active {\n    color: #3807fd;\n  }\n`;\n","import { useLocation, Outlet } from 'react-router-dom';\nimport {\n  SectionStyled,\n  LinksWrapperStyled,\n  NavLinkStyled,\n} from './MovieDetails.styled';\nimport { ButtonStyled } from 'components/Movies/Movies.styled';\n\nconst MovieDetails = ({ film, onGoBack }) => {\n  const location = useLocation();\n\n  const {\n    original_title,\n    release_date,\n    overview,\n    backdrop_path,\n    title,\n    vote_average,\n    genres,\n    poster_path,\n    credits,\n    reviews,\n  } = film;\n\n  return (\n    <SectionStyled>\n      <ButtonStyled type=\"button\" onClick={onGoBack}>\n        Go back\n      </ButtonStyled>\n      <h2>{original_title}</h2>\n      {backdrop_path ? (\n        <img\n          src={`https://image.tmdb.org/t/p/w500/${backdrop_path}`}\n          alt={title}\n        />\n      ) : (\n        <img\n          src={`https://image.tmdb.org/t/p/w500/${poster_path}`}\n          alt={title}\n        />\n      )}\n\n      <p>Release date: {release_date}</p>\n      {\n        <p>\n          User score:\n          {vote_average !== 0 ? (\n            <span> {vote_average}</span>\n          ) : (\n            <span>not scored yet</span>\n          )}\n        </p>\n      }\n\n      <ul>\n        <p>Genres:</p>\n        {genres && genres.map(({ id, name }) => <li key={id}>{name}</li>)}\n      </ul>\n      <p>{overview}</p>\n      <LinksWrapperStyled>\n        <NavLinkStyled\n          to={{\n            pathname: 'cast',\n          }}\n          state={{ credits, from: location?.state?.from }}\n        >\n          Cast\n        </NavLinkStyled>\n        <NavLinkStyled\n          to={{\n            pathname: 'reviews ',\n          }}\n          state={{ reviews, from: location?.state?.from }}\n        >\n          Reviews\n        </NavLinkStyled>\n      </LinksWrapperStyled>\n      <Outlet />\n    </SectionStyled>\n  );\n};\n\nexport default MovieDetails;\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport { fetchFilmsDetails } from 'services/api';\nimport MovieDetails from 'components/MovieDetails/MovieDetails';\nimport Loader from 'components/Loader/Loader';\n\nconst MovieDetailsPage = () => {\n  const [film, setFilm] = useState([]);\n  const { moviesId } = useParams();\n  const [loading, setLoading] = useState(false);\n  const [error, setErrror] = useState('');\n  const location = useLocation();\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    async function fetchMovies() {\n      setLoading(true);\n      try {\n        const film = await fetchFilmsDetails(moviesId);\n        setFilm(film);\n      } catch (error) {\n        setErrror(error.message);\n      } finally {\n        setLoading(false);\n      }\n    }\n    fetchMovies();\n  }, [moviesId]);\n\n  const onGoBack = () => {\n    navigate(location?.state?.from ?? '/');\n  };\n\n  return (\n    <>\n      {loading && <Loader />}\n      {!error && <MovieDetails film={film} onGoBack={onGoBack} />}\n    </>\n  );\n};\n\nexport default MovieDetailsPage;\n","import axios from 'axios';\n\nconst APIkey = '?api_key=d0d2393ff57617bcd19c89c64bc8a08d';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nexport const fetchFilmsDetails = async id => {\n  const response = await axios.get(`\n  ${BASE_URL}/movie/${id}${APIkey}&append_to_response=credits,reviews`);\n  return response.data;\n};\n\nexport const fetchTrendingMovies = async () => {\n  const response = await axios.get(`${BASE_URL}/trending/movie/day${APIkey}`);\n  return response.data;\n};\n\nexport const fetchMoviesFromQuery = async query => {\n  const response = await axios.get(\n    `${BASE_URL}/search/movie${APIkey}&query=${query}`\n  );\n  return response.data;\n};\n"],"names":["FormStyled","styled","InputStyled","ButtonStyled","SectionStyled","LinksWrapperStyled","NavLinkStyled","NavLink","film","onGoBack","location","useLocation","original_title","release_date","overview","backdrop_path","title","vote_average","genres","poster_path","credits","reviews","type","onClick","src","alt","map","id","name","to","pathname","state","from","useState","setFilm","moviesId","useParams","loading","setLoading","error","setErrror","navigate","useNavigate","useEffect","fetchFilmsDetails","message","fetchMovies","Loader","APIkey","BASE_URL","axios","response","data","fetchTrendingMovies","fetchMoviesFromQuery","query"],"sourceRoot":""}